/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * TiDev Titanium Mobile
 * Copyright TiDev, Inc. 04/07/2022-Present
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 */
package ti.exoplayer;

import android.app.Activity;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiUIView;

@Kroll.proxy(creatableInModule = TiExoPlayerModule.class)
public class ExoPlayerProxy extends TiViewProxy {
    static boolean audioOnly = false;

    public ExoPlayerProxy() {
        super();
    }

    @Override
    public TiUIView createView(Activity activity) {
        TiUIView view = new ExoPlayerView(this);
        view.getLayoutParams().autoFillsHeight = true;
        view.getLayoutParams().autoFillsWidth = true;
        return view;
    }

    protected ExoPlayerView getView() {
        return (ExoPlayerView) getOrCreateView();
    }

    // Handle creation options
    @Override
    public void handleCreationDict(KrollDict options) {
        super.handleCreationDict(options);

        if (options.containsKey("url")) {
            getView().setMediaItem(options.getString("url"));
        } else if (options.containsKeyAndNotNull("audioOnly")) {
            audioOnly = options.getBoolean("audioOnly");
        }
    }

    @Kroll.getProperty
    public String getUrl() {
        return getView().mediaUrl;
    }

    @Kroll.setProperty
    public void setUrl(String url) {
        getView().setMediaItem(url);
    }

    @Kroll.getProperty
    public boolean isPlaying() {
        return getView().isPlaying;
    }

    @Kroll.getProperty
    public boolean audioOnly() {
        return audioOnly;
    }

    @Kroll.method
    public void play() {
        getView().play();
    }

    @Kroll.method
    public void stop() {
        getView().stop();
    }
}
